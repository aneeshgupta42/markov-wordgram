Aneesh Gupta ag468

Run WordGramDriver for wordgrams of size 2-10 and record
the number of WordGram values/objects that occur more than
once as reported by the runs. For example, with WSIZE = 2,
which generates 2-grams, the output of benchmark and benchmarkShift
each indicates that the total # wordgrams generated is 177,634
and that the # unique wordgrams is 117,181

This means there are 177,634 - 117,181 = 60,453 WordGram values that
occur more than once. Find these same values for other orders
of k and complete the table below for different k-grams/different 
values of WSIZE

WSIZE    # duplicates
2        60,453
3        10,756
4        1,987      	
5        667 
6        362 
7        226
8        151 
9        105
10       73 

=====
Explain in your own words the conceptual differences between 
the benchmark and benchmarkShift methods. 
Answer these questions: 

(1) Why the results of these methods should be the same in 
terms of changes made to the HashSet parameter passed to each method.

Both these methods accomplish the same thing by using different methodologies while
operating on the set parameter parameter passed to them.
A hashset neglects duplicated by default, and the results from both the methods are same, since WSIZE
is subtracted from both and 1 is added to both. The difference exists in how they increase the array scope in 
terms of more words to store.

(2) What are the conceptual differences between the two
benchmarking methods

Benchmark reads the entire file into an array list, so all strings are stored at once.
One the other hand, BenchmarkShift uses another method by repeatedly calling shiftAdd 
(sort of reading one additional word each time).

(3) Is the total amount of memory allocated for arrays
the same or different in the two methods? Account for
arrays created in the methods and arrays created by
WordGram objects. Try to be quantitative in answering.

The memory allocated will be different. Benchmark needs to store the entire array in memory,
while for benchmarkShift only stores WSIZE words at a time. For N wordgrams, benchmark will store all N words
but benchmark only stores WSIZE words. Memory will be different, therefore, and we can say typically WSIZE is 
significantly smaller than N. Therefore there will be a significant difference in the memory allication.
